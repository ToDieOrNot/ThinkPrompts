``` ====================================================================================================== ```

## Install

- On macOS and Linux.
curl -LsSf https://astral.sh/uv/install.sh | sh

- On Windows.
powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"

- With pip.(推荐)
pip install uv

``` ====================================================================================================== ```

## Init

- 生成pyproject.toml和uv.lock .在当前目录下创建项目路径. uv init 创建项目之后，会自动将项目使用Git来管理
uv init
uv init myproject

- 创建虚拟环境(默认创建.venv目录)
uv venv .venv

- 创建虚拟环境(指定python版本)
uv venv -p 3.12

- 同步锁定依赖,根据pyproject.toml和uv.lock创建. 构建完整的依赖列表并写入uv.lock 文件,最后将依赖同步到虚拟环境中
uv sync

``` ====================================================================================================== ```

## Manager

- 安装三方库(pandas依赖的包也自动安装了)
uv add pandas
uv pip install fastapi
uv pip install "numpy>=1.21"
uv pip install -r requirements.txt

- 把pandas安装到开发环境中
uv add --group dev pandas

- 把requests安装到生产环境中
uv add --group production requests

- 移除三方库
uv remove pandas
uv pip uninstall requests

- 清理缓存
uv pip cache purge

``` ====================================================================================================== ```

## Run

- 运行
uv run .\hello.py

``` ====================================================================================================== ```

## 典型工作流示例

// mkdir demo && cd demo
cd /home/project/seed-vc
git clone https://github.com/Plachtaa/seed-vc.git ./
uv init
// echo "" > pyproject.toml
uv sync
// .venv/Scripts/activate
source .venv/bin/activate
uv pip list

``` ====================================================================================================== ```

## 打包

- 构建包
uv build

- 发布包
uv publish